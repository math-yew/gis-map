"use strict";(self.webpackChunkarcgis=self.webpackChunkarcgis||[]).push([[2248],{72248:(Q,w,t)=>{t.r(w),t.d(w,{default:()=>z});var f,T=t(15861),o=t(17626),c=(t(29132),t(84792)),g=t(26584),B=t(2076),b=t(62208),j=t(99959),l=t(77712),C=(t(90912),t(85931),t(76898)),v=t(65234),U=t(2004),R=t(65401),L=t(44917),S=t(552),x=t(30346),P=t(99555),I=t(12585),m=t(2584);const h=new(t(68511).f)("0/0/0",0,0,0,void 0);let u=f=class extends((0,S.h)((0,P.M)((0,x.Q)(L.Z)))){constructor(){super(...arguments),this.tileInfo=m.Z.create({spatialReference:v.Z.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new U.Z(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,v.Z.WebMercator),this.spatialReference=v.Z.WebMercator}getTileBounds(e,n,a,d){const i=d||(0,R.Ue)();return h.level=e,h.row=n,h.col=a,h.extent=i,this.tileInfo.updateTileInfo(h),h.extent=void 0,i}fetchTile(e,n,a,d={}){const{signal:i}=d,y=this.getTileUrl(e,n,a),p={responseType:"image",signal:i,query:{...this.refreshParameters}};return(0,c.default)(y??"",p).then(M=>M.data)}fetchImageBitmapTile(e,n,a,d={}){var i=this;return(0,T.Z)(function*(){const{signal:y}=d;if(i.fetchTile!==f.prototype.fetchTile){const $=yield i.fetchTile(e,n,a,d);try{return createImageBitmap($)}catch(N){throw new g.Z("request:server",`Unable to load tile ${e}/${n}/${a}`,{error:N,level:e,row:n,col:a})}}const p=i.getTileUrl(e,n,a)??"",M={responseType:"blob",signal:y,query:{...i.refreshParameters}},{data:E}=yield(0,c.default)(p,M);return(0,I.g)(E,p)})()}getTileUrl(){throw new g.Z("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};(0,o._)([(0,l.Cb)({type:m.Z})],u.prototype,"tileInfo",void 0),(0,o._)([(0,l.Cb)({type:["show","hide"]})],u.prototype,"listMode",void 0),(0,o._)([(0,l.Cb)({readOnly:!0,value:"base-tile"})],u.prototype,"type",void 0),(0,o._)([(0,l.Cb)({nonNullable:!0})],u.prototype,"fullExtent",void 0),(0,o._)([(0,l.Cb)()],u.prototype,"spatialReference",void 0),u=f=(0,o._)([(0,C.j)("esri.layers.BaseTileLayer")],u);const W=u;var A=t(49286),r=t(72258),D=t(72642);const Z=new B.X({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"});let s=class extends((0,S.h)((0,A.q)((0,j.R)(W)))){constructor(e){super(e),this.type="bing-maps",this.tileInfo=new m.Z({size:[256,256],dpi:96,origin:new D.Z({x:-20037508.342787,y:20037508.342787,spatialReference:v.Z.WebMercator}),spatialReference:v.Z.WebMercator,lods:[new r.Z({level:1,resolution:78271.5169639999,scale:295828763.795777}),new r.Z({level:2,resolution:39135.7584820001,scale:147914381.897889}),new r.Z({level:3,resolution:19567.8792409999,scale:73957190.948944}),new r.Z({level:4,resolution:9783.93962049996,scale:36978595.474472}),new r.Z({level:5,resolution:4891.96981024998,scale:18489297.737236}),new r.Z({level:6,resolution:2445.98490512499,scale:9244648.868618}),new r.Z({level:7,resolution:1222.99245256249,scale:4622324.434309}),new r.Z({level:8,resolution:611.49622628138,scale:2311162.217155}),new r.Z({level:9,resolution:305.748113140558,scale:1155581.108577}),new r.Z({level:10,resolution:152.874056570411,scale:577790.554289}),new r.Z({level:11,resolution:76.4370282850732,scale:288895.277144}),new r.Z({level:12,resolution:38.2185141425366,scale:144447.638572}),new r.Z({level:13,resolution:19.1092570712683,scale:72223.819286}),new r.Z({level:14,resolution:9.55462853563415,scale:36111.909643}),new r.Z({level:15,resolution:4.77731426794937,scale:18055.954822}),new r.Z({level:16,resolution:2.38865713397468,scale:9027.977411}),new r.Z({level:17,resolution:1.19432856685505,scale:4513.988705}),new r.Z({level:18,resolution:.597164283559817,scale:2256.994353}),new r.Z({level:19,resolution:.298582141647617,scale:1128.497176}),new r.Z({level:20,resolution:.1492910708238085,scale:564.248588})]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(e){this._set("bingMetadata",e)}get copyright(){return(0,b.pC)(this.bingMetadata)?this.bingMetadata.copyright:null}get operationalLayerType(){return Z.toJSON(this.style)}get bingLogo(){return(0,b.pC)(this.bingMetadata)?this.bingMetadata.brandLogoUri:null}load(e){return this.addResolvingPromise(this.key?this._getMetadata():this.portalUrl?this._getPortalBingKey().then(()=>this._getMetadata()):Promise.reject(new g.Z("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(e,n,a){if(!this.loaded||(0,b.Wi)(this.bingMetadata))return null;const d=this.bingMetadata.resourceSets[0].resources[0],i=d.imageUrlSubdomains[n%d.imageUrlSubdomains.length],y=this._getQuadKey(e,n,a);return d.imageUrl.replace("{subdomain}",i).replace("{quadkey}",y)}fetchAttributionData(){var e=this;return(0,T.Z)(function*(){return e.load().then(()=>(0,b.Wi)(e.bingMetadata)?null:{contributors:e.bingMetadata.resourceSets[0].resources[0].imageryProviders.map(n=>({attribution:n.attribution,coverageAreas:n.coverageAreas.map(a=>({zoomMin:a.zoomMin,zoomMax:a.zoomMax,score:1,bbox:[a.bbox[0],a.bbox[1],a.bbox[2],a.bbox[3]]}))}))})})()}_getMetadata(){return(0,c.default)(`https://dev.virtualearth.net/REST/v1/Imagery/Metadata/${{road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style]}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then(n=>{const a=n.data;if(200!==a.statusCode)throw new g.Z("bingmapslayer:getmetadata",a.statusDescription);if(this.bingMetadata=a,0===this.bingMetadata.resourceSets.length)throw new g.Z("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new g.Z("bingmapslayer:getmetadata","no bing resources")}).catch(n=>{throw new g.Z("bingmapslayer:getmetadata",n.message)})}_getPortalBingKey(){return(0,c.default)(this.portalUrl??"",{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then(e=>{if(!e.data.bingKey)throw new g.Z("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey}).catch(e=>{throw new g.Z("bingmapslayer:getportalbingkey",e.message)})}_getQuadKey(e,n,a){let d="";for(let i=e;i>0;i--){let y=0;const p=1<<i-1;a&p&&(y+=1),n&p&&(y+=2),d+=y.toString()}return d}};(0,o._)([(0,l.Cb)({json:{read:!1,write:!1},value:null})],s.prototype,"bingMetadata",null),(0,o._)([(0,l.Cb)({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],s.prototype,"type",void 0),(0,o._)([(0,l.Cb)({type:m.Z})],s.prototype,"tileInfo",void 0),(0,o._)([(0,l.Cb)({type:String,readOnly:!0,json:{read:!1,write:!1}})],s.prototype,"copyright",null),(0,o._)([(0,l.Cb)({type:String,json:{write:!1,read:!1}})],s.prototype,"key",void 0),(0,o._)([(0,l.Cb)({type:Z.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:Z.read}}})],s.prototype,"style",void 0),(0,o._)([(0,l.Cb)({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],s.prototype,"operationalLayerType",null),(0,o._)([(0,l.Cb)({type:String,json:{write:!1,read:!1}})],s.prototype,"culture",void 0),(0,o._)([(0,l.Cb)({type:String,json:{write:!1,read:!1}})],s.prototype,"region",void 0),(0,o._)([(0,l.Cb)({type:String,json:{write:!0,read:!0}})],s.prototype,"portalUrl",void 0),(0,o._)([(0,l.Cb)({type:Boolean,json:{write:!1,read:!1}})],s.prototype,"hasAttributionData",void 0),(0,o._)([(0,l.Cb)({type:String,readOnly:!0})],s.prototype,"bingLogo",null),s=(0,o._)([(0,C.j)("esri.layers.BingMapsLayer")],s);const z=s}}]);