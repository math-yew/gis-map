"use strict";(self.webpackChunkarcgis=self.webpackChunkarcgis||[]).push([[3358],{23358:(y,d,a)=>{a.r(d),a.d(d,{execute:()=>g});var h=a(15861),f=a(26584),p=a(62208);let l;function g(o,t){let e=t.responseType;e?"array-buffer"!==e&&"blob"!==e&&"json"!==e&&"native"!==e&&"native-request-init"!==e&&"text"!==e&&(e="text"):e="json",t.responseType=e;const b=(0,p.Wg)(t.signal);return delete t.signal,globalThis.invokeStaticMessage("request",{url:o,options:t},{signal:b}).then(function(){var v=(0,h.Z)(function*(s){let i,n,_,c,r;if(s.data)if(s.data instanceof ArrayBuffer){if(!("json"!==e&&"text"!==e&&"blob"!==e||(i=new Blob([s.data]),"json"!==e&&"text"!==e||(l||(l=new FileReaderSync),c=l.readAsText(i),"json"!==e)))){try{n=JSON.parse(c||null)}catch(u){const m={...u,url:o,requestOptions:t};throw new f.Z("request:server",u.message,m)}if(n.error){const u={...n.error,url:o,requestOptions:t};throw new f.Z("request:server",n.error.message,u)}}}else"native"===e&&(s.data.signal=b,_=yield fetch(s.data.url,s.data),s.httpStatus=_.status);switch(e){case"blob":r=i;break;case"json":r=n;break;case"native":r=_;break;case"text":r=c;break;default:r=s.data}return{data:r,httpStatus:s.httpStatus,requestOptions:t,ssl:s.ssl,url:o}});return function(s){return v.apply(this,arguments)}}())}}}]);